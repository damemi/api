apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: authentications.operator.openshift.io
spec:
  scope: Cluster
  preserveUnknownFields: false
  group: operator.openshift.io
  version: v1
  names:
    kind: Authentication
    plural: authentications
    singular: authentication
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Authentication provides information to configure an operator to
        manage authentication.
      type: object
      required:
      - spec
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
          properties:
            logLevel:
              description: logLevel is an intent based logging for an overall component.  It
                does not give fine grained control, but it is a simple way to manage
                coarse grained logging choices that operators have to interpret for
                their operands.
              type: string
            managementState:
              description: managementState indicates whether and how the operator
                should manage the component
              type: string
              pattern: ^(Managed|Unmanaged|Force|Removed)$
            observedConfig:
              description: observedConfig holds a sparse config that controller has
                observed from the cluster state.  It exists in spec because it is
                an input to the level for the operator
              type: object
              nullable: true
              x-kubernetes-preserve-unknown-fields: true
            operatorLogLevel:
              description: operatorLogLevel is an intent based logging for the operator
                itself.  It does not give fine grained control, but it is a simple
                way to manage coarse grained logging choices that operators have to
                interpret for themselves.
              type: string
            unsupportedConfigOverrides:
              description: 'unsupportedConfigOverrides holds a sparse config that
                will override any previously set options.  It only needs to be the
                fields to override it will end up overlaying in the following order:
                1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
              type: object
              nullable: true
              x-kubernetes-preserve-unknown-fields: true
        status:
          type: object
          properties:
            conditions:
              description: conditions is a list of conditions and their status
              type: array
              items:
                description: "Condition contains details for one aspect of the current
                  state of this API Resource. --- This struct is intended for direct
                  use as an array at the field path .status.conditions.  For example,
                  type FooStatus struct{     // Represents the observations of a foo's
                  current state.     // Known .status.conditions.type are: \"Available\",
                  \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     //
                  +patchStrategy=merge     // +listType=map     // +listMapKey=type
                  \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                  patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                  \n     // other fields }"
                type: object
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition
                      transitioned from one status to another. This should be when
                      the underlying condition changed.  If that is not known, then
                      using the time when the API field changed is acceptable.
                    type: string
                    format: date-time
                  message:
                    description: message is a human readable message indicating details
                      about the transition. This may be an empty string.
                    type: string
                    maxLength: 32768
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.conditions[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    type: integer
                    format: int64
                    minimum: 0
                  reason:
                    description: reason contains a programmatic identifier indicating
                      the reason for the condition's last transition. Producers of
                      specific condition types may define expected values and meanings
                      for this field, and whether the values are considered a guaranteed
                      API. The value should be a CamelCase string. This field may
                      not be empty.
                    type: string
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      --- Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    type: string
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
            generations:
              description: generations are used to determine when an item needs to
                be reconciled or has changed in a way that needs a reaction.
              type: array
              items:
                description: GenerationStatus keeps track of the generation for a
                  given resource so that decisions about forced updates can be made.
                type: object
                properties:
                  group:
                    description: group is the group of the thing you're tracking
                    type: string
                  hash:
                    description: hash is an optional field set for resources without
                      generation that are content sensitive like secrets and configmaps
                    type: string
                  lastGeneration:
                    description: lastGeneration is the last generation of the workload
                      controller involved
                    type: integer
                    format: int64
                  name:
                    description: name is the name of the thing you're tracking
                    type: string
                  namespace:
                    description: namespace is where the thing you're tracking is
                    type: string
                  resource:
                    description: resource is the resource type of the thing you're
                      tracking
                    type: string
            managingOAuthAPIServer:
              description: ManagingOAuthAPIServer indicates whether this operator
                is managing OAuth related APIs. Setting this field to true will cause
                OAS-O to step down. Note that this field will be removed in the future
                releases, once https://github.com/openshift/enhancements/blob/master/enhancements/authentication/separate-oauth-resources.md
                is fully implemented
              type: boolean
            oauthAPIServer:
              description: OAuthAPIServer holds status specific only to oauth-apiserver
              type: object
              properties:
                latestAvailableRevision:
                  description: LatestAvailableRevision is the latest revision used
                    as suffix of revisioned secrets like encryption-config. A new
                    revision causes a new deployment of pods.
                  type: integer
                  format: int32
                  minimum: 0
            observedGeneration:
              description: observedGeneration is the last generation change you've
                dealt with
              type: integer
              format: int64
            readyReplicas:
              description: readyReplicas indicates how many replicas are ready and
                at the desired state
              type: integer
              format: int32
            version:
              description: version is the level this availability applies to
              type: string
